diff --git a/node_modules/googleapis/node_modules/google-auth-library/node_modules/jws/node_modules/jwa/index.js b/node_modules/googleapis/node_modules/google-auth-library/node_modules/jws/node_modules/jwa/index.js
index 9fb70d0..44c9d7e 100644
--- a/node_modules/googleapis/node_modules/google-auth-library/node_modules/jws/node_modules/jwa/index.js
+++ b/node_modules/googleapis/node_modules/google-auth-library/node_modules/jws/node_modules/jwa/index.js
@@ -1,7 +1,9 @@
+"use strict";
+
 const bufferEqual = require('buffer-equal-constant-time');
 const base64url = require('base64url');
 const crypto = require('crypto');
-const formatEcdsa = require('ecdsa-sig-formatter');
+let formatEcdsa;
 const util = require('util');
 
 const MSG_INVALID_ALGORITHM = '"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512" and "none".'
@@ -71,6 +73,9 @@ function createECDSASigner(bits) {
   const inner = createKeySigner(bits);
   return function sign() {
     var signature = inner.apply(null, arguments);
+    if(!formatEcdsa) {
+      formatEcdsa = require('ecdsa-sig-formatter');
+    }
     signature = formatEcdsa.derToJose(signature, 'ES' + bits);
     return signature;
   };
@@ -79,6 +84,9 @@ function createECDSASigner(bits) {
 function createECDSAVerifer(bits) {
   const inner = createKeyVerifier(bits);
   return function verify(thing, signature, publicKey) {
+    if(!formatEcdsa) {
+      formatEcdsa = require('ecdsa-sig-formatter');
+    }
     signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');
     const result = inner(thing, signature, publicKey);
     return result;
