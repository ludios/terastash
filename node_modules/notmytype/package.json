{
  "name": "notmytype",
  "version": "1.2.3",
  "description": "Type-check your function inputs with syntax like T(s, T.string, buf, Buffer, strings, T.list(T.string))",
  "homepage": "https://github.com/ludios/notmytype",
  "issues": "https://github.com/ludios/notmytype/issues",
  "keywords": [
    "types",
    "type-check",
    "type-checking",
    "assert",
    "validate",
    "validation"
  ],
  "main": "index.js",
  "scripts": {
    "test": "node --harmony-rest-parameters ./node_modules/.bin/_mocha tests/*.js && ./node_modules/.bin/eslint .",
    "test-strong-mode": "node --harmony-rest-parameters --strong_mode ./node_modules/.bin/_mocha tests/*.js"
  },
  "devDependencies": {
    "eslint": "^1.0.0",
    "mocha": "^2.2.5"
  },
  "author": {
    "name": "Ivan Kozik"
  },
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ludios/notmytype.git"
  },
  "engines": {
    "iojs": ">= 2.0.0",
    "node": ">= 4.0.0"
  },
  "readme": "notmytype\n===\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n\nnotmytype provides a type-asserting function that handles multiple arguments and uses the [type asserter](https://github.com/gcanti/flowcheck/blob/master/src/assert.js) from [flowcheck](https://github.com/gcanti/flowcheck).\n\n\nInstall\n---\n\nIn your project, run:\n\n```\nnpm install notmytype --save\n```\n\nor install from the GitHub repo:\n\n```\nnpm install ludios/notmytype --save\n```\n\n\nExamples\n---\n\nnotmytype requires io.js 2.0.0+/node 4.0.0+ running with `--harmony-rest-parameters`.\n\n```js\nconst T = require('notmytype');\n```\n\nAll of these examples type-check without error:\n\n```js\nT(3, T.number);\nT(3, T.number, \"hello\", T.string);\nT(3, T.number, true, T.boolean);\nT([true, false, true], T.list(T.boolean));\nT([true, 3, true], T.list(T.union([T.boolean, T.number])));\nT(undefined, T.optional(T.number));\nT(3, T.optional(T.number));\nT(null, T.maybe(T.number));\nT(3, T.maybe(T.number));\nT(new Buffer(\"hi\"), Buffer);\nT([3, \"hi\"], T.tuple([T.number, T.string]));\nT({\"hello\": 3}, T.dict(T.string, T.number));\nT(undefined, T.void);\nT({\"hello\": 3}, T.shape({\"hello\": T.number}));\nT({\"hello\": 3, \"extra\": \"s\"}, T.shape({\"hello\": T.number}));\nT(Symbol('a'), T.symbol);\n```\n\n`T()` raises `TypeError` if given an object of the wrong type:\n\n```\n> T([3, \"s\"], T.list(T.number))\nTypeError: First object: Expected an instance of number; got \"s\", context: Array<number> / 1\n```\n\nSee [assert.js](https://github.com/ludios/notmytype/blob/master/assert.js) and [test/assert.js](https://github.com/ludios/notmytype/blob/master/tests/assert.js) for details.\n\n\n[npm-image]: https://img.shields.io/npm/v/notmytype.svg\n[npm-url]: https://npmjs.org/package/notmytype\n[travis-image]: https://img.shields.io/travis/ludios/notmytype.svg\n[travis-url]: https://travis-ci.org/ludios/notmytype\n",
  "readmeFilename": "README.md",
  "gitHead": "67b89ba03f575dd7ff4ce61ddd69ca3c8500f89e",
  "bugs": {
    "url": "https://github.com/ludios/notmytype/issues"
  },
  "_id": "notmytype@1.2.3",
  "_shasum": "3add658aa67a45ea0ab419a5f1b468be9087add8",
  "_from": "notmytype@>=1.2.3 <2.0.0"
}
